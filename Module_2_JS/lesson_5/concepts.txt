0. A Programming Language:
    What:   A Language used to give commands to the computer
    Why:    To automate most of the stuffs
    How:    We write commands in the .js file to order 
                the comptuer to do the heavy lifting

1. Varaibles
    What:   Are boxes in the memory that can store data/content/information
    Why:    To store data so we can use it for later
    How:    
            let age;      //reserve a box in the memory [declaring a variable]
            let name;

            age = 10;       //saving 10 to the variable "age"
            name = "Jack";


2. Data Types
    What:   Categories of data/content/information
    Why:    To Treat(save, delete, change) data better
    How:
            types:   number     10, -100, 0
                     string     "Jack", "name", "10"
                     boolean    True, False

3. Operators
    What:   Small functions that can do one small job
    Why:    To Do calculations (math, logic)
    How: 
            Arithmetic: +, -, *, /, %

                5 / 2 = 2.5 | 2(1)
                5 % 2 = 1

                7 % 2 = 1
                8 % 2 = 0
            Conditional:    > < >= <= == !=

                5 > 2               True
                5 > 5               False
                "Anna" > "Ben"          False
                3   >  4

                "Anna" < "Annastasia"   True

                "Anna" < "Anna"         False

                10 != -10               True

            Logical: and: && , or: ||, not: !
                
                age >= 18 && age <= 66

4. Conditional Statment

    if credetials are right, let the user enter the profile page

    parts of the "Conditional Statment":
        a. the "if" keyword
        b. the condition    ()
        c. the body         {}
        d. the "else" part

        EX: if(age > 18){
            console.log("Enter the shop");
        }
5. Looping Statment
    What: A Statment that repeats its body when the condition is TRUE
    Why:  When we want a piece of code to repeat 
    How:  Use the "while" keyword

        2 Types of loops:
            a. Known Loop (the number of reps is known before the loop starts)
                number of reps: 3

                starting_point: 0
                ending_point:   3
                step:           +1

                number of reps: user_number

                starting_point: 0
                ending_point:   user_number
                step:           +1

                number of reps: user_age

                starting_point: 0
                ending_point:   user_age
                step:           +1


            b. UnKown Loop (the number of reps is not known before the loop starts)
                
                the breaking condition
                ending_point:  

                make a loop that will keep generating random 
                number untill it generates an even number 

                make a loop that asks the user for a positive number
                and it keeps asking him until he eneter a positive number

        The value that changes during the loop
            a. declare it as a variable outside the loop
            b. use it (print/add it to the sum/ use as index)
            c. change it for the next step

6. Arrays
    What:   Big variables that save many element
    Why:    To manage collections of data EX: students grades. students names, products prices
    How
        #Declaring an array
            let students_scores = []
            let students_scores = [100,79,55,67,40]

        #Adding values to it
            students_scores.push(65)

        #Select element from the array(indexes)
            students_scores[0] -> first element(100)
        
        #Get the total number of element in the array
            students_scores.length -> 

7. Objects (Literal Object)
    What:   Big variables that save many DETAILS about ONE element
    Why:    To have all the data that descirbes 1 entity(student, product) together
    How:
            Declare:    
                let student = {}
                let student = {
                    name: "Ben",
                    age: 15,
                    avg_grade: "A",
                    last_exam: 95
                }
            
            Add details(field = key + value)
                student.isActive = true
            
            Select a detail

                student.age => 15
                student["age"] => 15

8. Functions 
    What:   small programs(in/cal/out) inside our program 
    Why:    Write ONCE, use TWICE
    How:   
            prompt(), log()

            The 4 parts of a function:
                a. the keyword "function"
                b. the name of a function, should start with a verb
                c. the list of parameters   () 
                d. the body                 {}

                Declaration:

                EX: function discout_price(original_price, discout_percentage){
                    let discout_amount = original_price * discout_percentage;
                    let discouted_price = original_price - discout_amount;
                    return discouted_price;
                }


                Calling:

                let price_1_discounted = discout_price(1000, 0.1)
                let price_2_discounted = discout_price(500, 0.2)